import Head from 'next/head';
import { useRouter } from 'next/router';
import { Basket } from '../../components/Basket';
import { addClick, AppStore, useAddToBasketMutation, useGetCategoryByIdQuery, useGetProductsQuery } from '../../store'
import styles from '../../styles/Home.module.css';
import { skipToken } from "@reduxjs/toolkit/query";
import Link from 'next/link';
import { useStore } from 'react-redux';
import { AppData } from '../../components/AppData';
import { CategoryProducts } from '../../components/CategoryProducts';

const Category = () => {

    const router = useRouter();
    const { id } = router.query;

    const { data: category, error, isLoading } = useGetCategoryByIdQuery(typeof id === "string" ? id : skipToken, { skip: router.isFallback });
    const { data: products, error: productsError, isLoading: productsLoading } = useGetProductsQuery();
    const [addToBasket] = useAddToBasketMutation();
    const store: AppStore = useStore();

    if (error) return <>{error}</>;

    if (productsError) return <>{productsError}</>;

    if (isLoading || productsLoading) {
        console.log("loading category")
        return <div className={styles.card}>
            <h2>Loading</h2>
        </div>
    }

    console.log("rendered category");

    const handleAddToBasket = (product: Product) => {
        store.dispatch(addClick(product.name));
        addToBasket({
            id: product.id,
            name: product.name,
            quantity: 1,
            price: product.unitPrice
        })
    }

    return (
        <div className={styles.container}>
            <Head>
                <title>Redux Toolkit</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>
                <Link href={"/"}>Home</Link>
                <Basket />
                <AppData />
                {category && <CategoryProducts category={category} products={products?.filter(({ categoryId }) => categoryId === category.id) || []} />}
            </main>
        </div>
    )
}

export default Category;